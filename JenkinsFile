pipeline{
        agent { label 'ltelearn' }
        parameters { 
            choice(name: 'buildstep', choices: ['clean package', 'test', 'package'], description: 'maven build step') 
        }
        stages {
            stage('scm'){
                steps{
                    git branch: 'qa', credentialsId: '46ff2a70-f7b7-48b9-baf3-a786dc140dce', url: 'https://github.com/Leeladhar14/my-gol-multibranch.git'
                }
            }
            stage('build') {
            steps {
                withSonarQubeEnv('SonarQube-6.7'){
                sh script: 'mvn clean package sonar:sonar'
            }
            }
        }
         stage("Quality Gate") {
            steps {
              timeout(time: 15, unit: 'MINUTES') {
                waitForQualityGate abortPipeline: true
              }
            }
            stage('post build') {
            steps {
                junit 'gameoflife-web/target/surefire-reports/*.xml'
                archiveArtifacts 'gameoflife-web/target/*.war'
            }
        }
        }
    post{
        always{
            echo 'I will always do it at last'
        }
    }
}